# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = []

# Start AeroSpace at login
start-at-login = false

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 15

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

[gaps]
inner.horizontal = 5
inner.vertical =   5
outer.left =       5
outer.bottom =     5
outer.top =        5
outer.right =      5

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right
# All possible modifiers: cmd, alt, ctrl, shift
# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
alt-enter = 'exec-and-forget open -n -a "Ghostty"'
cmd-enter= 'exec-and-forget open -n -a "Ghostty"'
shift-cmd-e = 'exec-and-forget open -a "Finder"'
cmd-e = '''
exec-and-forget open -na "Ghostty" --args --command=yazi \
    --quit-after-last-window-closed \
    --macos-icon=retro \
    --title=yazi
'''

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
alt-slash = 'layout tiles horizontal vertical'
alt-comma = 'layout v_accordion vertical'
alt-shift-f = 'fullscreen'
alt-f = 'layout floating tiling'

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
alt-h = 'focus --boundaries all-monitors-outer-frame left'
alt-j = 'focus --boundaries all-monitors-outer-frame down'
alt-k = 'focus --boundaries all-monitors-outer-frame up'
alt-l = 'focus --boundaries all-monitors-outer-frame right'

# See: https://nikitabobko.github.io/AeroSpace/commands#move
alt-shift-h = 'move left'
alt-shift-j = 'move down'
alt-shift-k = 'move up'
alt-shift-l = 'move right'

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
alt-shift-ctrl-minus = 'resize smart -100'
alt-shift-ctrl-equal = 'resize smart +100'
alt-shift-minus = 'resize smart -200'
alt-shift-equal = 'resize smart +200'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
alt-1 = 'workspace 1'
alt-2 = 'workspace 2'
alt-3 = 'workspace 3'
alt-4 = 'workspace 4'
alt-w = 'workspace w'
alt-q = 'workspace q'
alt-e = 'workspace e'
alt-r = 'workspace r'

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
alt-shift-1 = 'move-node-to-workspace 1'
alt-shift-2 = 'move-node-to-workspace 2'
alt-shift-3 = 'move-node-to-workspace 3'
alt-shift-4 = 'move-node-to-workspace 4'
alt-shift-w = 'move-node-to-workspace w'
alt-shift-q = 'move-node-to-workspace q'
alt-shift-e = 'move-node-to-workspace e'
alt-shift-r = 'move-node-to-workspace r'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
alt-tab = 'workspace-back-and-forth'

# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
alt-shift-semicolon = 'mode service'

# https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[workspace-to-monitor-force-assignment]
    q = 'main'
    w = 'main'
    e = 'main'
    r = 'main'
    1 = 'secondary'
    2 = 'secondary'
    3 = 'secondary'
    4 = 'secondary'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
    esc = ['reload-config', 'mode main']
    shift-r = ['reload-config', 'mode main']
    r = ['flatten-workspace-tree', 'mode main'] # reset layout
    f = ['layout floating tiling', 'mode main'] # toggle between floating and tiling layout

    backspace = ['close-all-windows-but-current', 'mode main']
    alt-shift-h = ['join-with left', 'mode main']
    alt-shift-j = ['join-with down', 'mode main']
    alt-shift-k = ['join-with up', 'mode main']
    alt-shift-l = ['join-with right', 'mode main']

[[on-window-detected]]
    if.window-title-regex-substring = 'Floating'
    run = 'layout floating'

[[on-window-detected]]
    if.window-title-regex-substring = 'Affinity'
    run = 'layout floating'

[[on-window-detected]]
    if.app-name-regex-substring = 'Discord'
    run = ['move-node-to-workspace 1']

[[on-window-detected]]
    if.app-id = 'com.apple.TextEdit'
    run = 'layout floating'

[[on-window-detected]]
    if.window-title-regex-substring = 'yazi'
    run = 'layout tiling'

[[on-window-detected]]
    check-further-callbacks = true
    run = 'layout floating'

# app ids
# com.apple.finder
# org.mozilla.firefox
# md.obsidian
# com.microsoft.VSCode
# com.googlecode.iterm2
# com.microsoft.teams2
